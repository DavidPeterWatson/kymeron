[gcode_macro Set_Loaded_Carriage]
variable_loaded_carriage_name: 'none'
gcode:
    {% set carriage_name = params.CARRIAGE %}
    {% set loaded_carriage_name = printer['gcode_macro Set_Loaded_Carriage'].loaded_carriage_name %}
    RESPOND MSG='{loaded_carriage_name} has been unloaded'
    SET_GCODE_VARIABLE MACRO=Set_Loaded_Carriage VARIABLE=loaded_carriage_name VALUE='"{carriage_name}"'
    RESPOND MSG='{carriage_name} has been loaded'


[gcode_macro Get_Loaded_Carriage]
gcode:
    {% set loaded_carriage_name = printer['gcode_macro Set_Loaded_Carriage'].loaded_carriage_name %}
    RESPOND MSG='{loaded_carriage_name} is loaded'


[gcode_macro Load_Carriage]
gcode:
    {% set carriage_name = params.CARRIAGE %}
    {% set carriage = printer.printer.lookup_object('carriage ' + carriage_name) %}
    {% set berth = printer.printer.lookup_object('berth ' + carriage.berth) %}
    Check_XCarriage_In_Safe_Zone DOCK='{berth.dock}'
    {% set loaded_carriage_name = printer['gcode_macro Set_Loaded_Carriage'].loaded_carriage_name %}
    {% if carriage_name == loaded_carriage_name %}
        RESPOND MSG='{carriage_name} is already loaded'
        Check_Carriage_Is_Loaded CARRIAGE='{carriage_name}'
    {% else %}
        {% if loaded_carriage_name != 'none' %}
            Unload_Carriage CARRIAGE='{loaded_carriage_name}'
        {% endif %}
        _Load_Carriage_Movement CARRIAGE='{carriage_name}'
    {% endif %}


[gcode_macro _Load_Carriage_Movement]
gcode:
    {% set carriage_name = params.CARRIAGE %}
    {% set carriage = printer.printer.lookup_object('carriage ' + carriage_name) %}
    {% set berth = printer.printer.lookup_object('berth ' + carriage.berth) %}
    {% set dock = printer.printer.lookup_object('dock ' + berth.dock) %}
    {% set carriage_changer = printer.printer.lookup_object('carriage_changer') %}
    Check_XCarriage_In_Safe_Zone DOCK='{dock.name}'
    Check_XCarriage_Is_Empty
    RESPOND MSG='Loading {carriage.name}'
    CLEAR_GCODE_OFFSET
    SAVE_GCODE_STATE NAME=Load_Carriage_Movement
    {carriage.before_load_gcode}
    MOVE_TO_SAFE_Z
    Set_Carriage_Changer_Acceleration
    # Align X-Carriage for loading
    G90
    G0 X{berth.x_pos - dock.engage_xd} Y{dock.safe_y} F{carriage_changer.align_speed}
    G4 P{carriage_changer.loading_pause}
    ALLOW_UNSAFE_MOVEMENT DOCK='{dock.name}'
    # Move towards berth
    G91
    G0 Y{dock.load_yd} F{carriage_changer.align_speed}
    G4 P{carriage_changer.loading_pause}
    # Engage carriage
    G91
    G0 X{dock.engage_xd} F{carriage_changer.engage_speed}
    G4 P{carriage_changer.loading_pause}
    Check_Carriage_Is_Loaded CARRIAGE='{carriage.name}'
    # Move carriage to safe zone
    G91
    G0 Y{0 - dock.load_yd} F{carriage_changer.load_speed}
    RESET_SAFE_MOVEMENT DOCK='{dock.name}'
    Set_Loaded_Carriage CARRIAGE='{carriage.name}'
    USE_MAX_ACCELERATION
    RESTORE_GCODE_STATE NAME=Load_Carriage_Movement
    SET_OFFSET_FOR_CARRIAGE CARRIAGE='{carriage.name}'
    {carriage.after_load_gcode}


[gcode_macro SET_OFFSET_FOR_CARRIAGE]
gcode:
    {% set carriage = printer.printer.lookup_object('carriage ' + params.CARRIAGE) %}
    SET_GCODE_OFFSET X={carriage.offset_x} Y={carriage.offset_y} Z={carriage.offset_z} MOVE=0


[gcode_macro GET_OFFSET_FOR_CARRIAGE]
gcode:
    {% set carriage = printer.printer.lookup_object('carriage ' + params.CARRIAGE) %}
    RESPOND MSG='Calibration complete for {carriage_name} x offset {carriage.offset_x}, y offset {carriage.offset_y}, z offset {carriage.offset_z}'


[gcode_macro Unload_Carriage_If_Loaded]
gcode:
    {% set loaded_carriage_name = printer['gcode_macro Set_Loaded_Carriage'].loaded_carriage_name %}
    {% if loaded_carriage_name != 'none' %}
        Unload_Carriage CARRIAGE='{loaded_carriage_name}'
    {% endif %}


[gcode_macro Unload_Carriage]
gcode:
    {% set carriage_name = params.CARRIAGE %}
    {% set carriage = printer.printer.lookup_object('carriage ' + carriage_name) %}
    {% set berth = printer.printer.lookup_object('berth ' + carriage.berth) %}
    {% set loaded_carriage_name = printer['gcode_macro Set_Loaded_Carriage'].loaded_carriage_name %}
    Check_XCarriage_In_Safe_Zone DOCK='{berth.dock}'
    Check_Carriage_Is_Loaded CARRIAGE='{loaded_carriage_name}'
    {% if carriage_name == loaded_carriage_name %}
        _Unload_Carriage_Movement CARRIAGE='{carriage_name}'
    {% else %}
        {% set message = 'Cannot unload ' + carriage_name + ' because ' + loaded_carriage_name + ' is loaded' %}
        { action_raise_error(message) }
    {% endif %}


[gcode_macro _Unload_Carriage_Movement]
gcode:
    {% set carriage_name = params.CARRIAGE %}
    {% set carriage = printer.printer.lookup_object('carriage ' + carriage_name) %}
    {% set berth = printer.printer.lookup_object('berth ' + carriage.berth) %}
    {% set dock = printer.printer.lookup_object('dock ' + berth.dock) %}
    {% set carriage_changer = printer.printer.lookup_object('carriage_changer') %}
    Check_XCarriage_In_Safe_Zone DOCK='{dock.name}'
    Check_Carriage_Is_Loaded CARRIAGE='{carriage_name}'
    RESPOND MSG='Unloading {carriage_name}'
    CLEAR_GCODE_OFFSET
    SAVE_GCODE_STATE NAME=Unload_Carriage_Movement
    {carriage.before_unload_gcode}
    MOVE_TO_SAFE_Z
    Set_Carriage_Changer_Acceleration
    # Align Carriage
    ALIGN_CARRIAGE_MOVEMENT BERTH='{berth.name}'
    ALLOW_UNSAFE_MOVEMENT DOCK='{dock.name}'
    # Move towards dock
    G91
    G0 Y{dock.load_yd} F{carriage_changer.load_speed}
    G4 P{carriage_changer.loading_pause}
    # Disengage carriage
    G91
    G0 X{0 - dock.engage_xd} F{carriage_changer.engage_speed}
    G4 P{carriage_changer.loading_pause}
    Check_XCarriage_Is_Empty
    # Move XCarriage to safe zone
    G91
    G0 Y{0 - dock.load_yd} F{carriage_changer.align_speed}
    RESET_SAFE_MOVEMENT DOCK='{dock.name}'
    Set_Loaded_Carriage CARRIAGE=none
    USE_MAX_ACCELERATION
    RESTORE_GCODE_STATE NAME=Unload_Carriage_Movement
    G4 P{carriage_changer.loading_pause}
    {carriage.after_unload_gcode}


[gcode_macro ALLOW_UNSAFE_MOVEMENT]
gcode:
    {% set dock = printer.printer.lookup_object('dock ' + params.DOCK) %}
    SET_KINEMATIC_POSITION Y={0 - dock.load_yd}
    DISABLE_EMERGENCY_STOP EMERGENCY_STOP={dock.unsafe_zone}


[gcode_macro RESET_SAFE_MOVEMENT]
gcode:
    {% set dock = printer.printer.lookup_object('dock ' + params.DOCK) %}
    SET_KINEMATIC_POSITION Y={dock.safe_y}
    ENABLE_EMERGENCY_STOP EMERGENCY_STOP={dock.unsafe_zone}


[gcode_macro ALIGN_CARRIAGE]
gcode:
    {% set berth_name = params.BERTH %}
    {% set berth = printer.printer.lookup_object('berth ' + berth_name) %}
    Check_XCarriage_In_Safe_Zone DOCK='{berth.dock}'
    SAVE_GCODE_STATE NAME=ALIGN_CARRIAGE_STATE
    ALIGN_CARRIAGE_MOVEMENT BERTH='{berth_name}'
    RESTORE_GCODE_STATE NAME=ALIGN_CARRIAGE_STATE


[gcode_macro ALIGN_CARRIAGE_MOVEMENT]
gcode:
    {% set berth_name = params.BERTH %}
    {% set berth = printer.printer.lookup_object('berth ' + berth_name) %}
    {% set dock = printer.printer.lookup_object('dock ' + berth.dock) %}
    {% set carriage_changer = printer.printer.lookup_object('carriage_changer') %}
    G90
    G0 X{berth.x_pos} Y{dock.safe_y} F{carriage_changer.align_speed}
    G4 P{carriage_changer.loading_pause}


[gcode_macro CLEAR_GCODE_OFFSET]
gcode:
    SET_GCODE_OFFSET X=0 Y=0 Z=0 MOVE=0


[gcode_macro Check_Carriage_Is_Loaded]
gcode:
    {% set carriage_name = params.CARRIAGE %}
    M400
    _Check_Carriage_Is_Loaded CARRIAGE='{carriage_name}'


[gcode_macro _Check_Carriage_Is_Loaded]
gcode:
    {% set carriage_name = params.CARRIAGE %}
    {% set carriage = printer.printer.lookup_object('carriage ' + carriage_name) %}
    # {% set carriage_loaded_state = printer['gcode_button ' + carriage.loaded_button].state %}
    # RESPOND MSG='Carriage Loaded Button: {carriage_loaded_state}'
    # {% if carriage_loaded_state == 'RELEASED' %}
    #     { action_raise_error('Expecting {carriage_name} to be loaded, but is not') }
    # {% endif %}


[gcode_macro Check_XCarriage_Is_Empty]
gcode:
    M400
    _Check_XCarriage_Is_Empty


[gcode_macro _Check_XCarriage_Is_Empty]
gcode:
    RESPOND MSG='loop through all carriage buttons'
    # {% set xcarriage_loaded = printer['gcode_button XCarriage_Loaded_Button'].state %}
    # {% if xcarriage_loaded == 'PRESSED' %}
    #     { action_raise_error('Expecting X Carriage to be empty, but carriage is loaded') }
    # {% endif %}


[gcode_macro Check_XCarriage_In_Safe_Zone]
gcode:
    M400
    _Check_XCarriage_In_Safe_Zone DOCK='{params.DOCK}'


[gcode_macro _Check_XCarriage_In_Safe_Zone]
gcode:
    {% set dock_name = params.DOCK%}
    {% set dock = printer.printer.lookup_object('dock ' + dock_name) %}
    {% set xcarriage_in_safe_zone_state = printer['emergency_stop ' + dock.unsafe_zone].state %}
    {% if xcarriage_in_safe_zone_state == 'PRESSED' %}
        { action_raise_error('Expecting X Carriage to be in safe zone, but it is in unsafe zone') }
    {% endif %}


[gcode_macro Check_XCarriage_In_Unsafe_Zone]
gcode:
    M400
    _Check_XCarriage_In_Unsafe_Zone


[gcode_macro _Check_XCarriage_In_Unsafe_Zone]
gcode:
    {% set dock_name = params.DOCK%}
    {% set dock = printer.printer.lookup_object('dock ' + dock_name) %}
    {% set xcarriage_in_safe_zone_state = printer['emergency_stop ' + dock.unsafe_zone].state %}
    {% if xcarriage_in_safe_zone_state == 'RELEASED' %}
        { action_raise_error('Expecting X Carriage to be in unsafe zone, but it is in safe zone') }
    {% endif %}


[gcode_macro MOVE_TO_SAFE_Z]
gcode:
    M400
    _MOVE_TO_SAFE_Z


[gcode_macro _MOVE_TO_SAFE_Z]
gcode:
    {% set carriage_changer = printer.printer.lookup_object('carriage_changer') %}
    {% if printer.toolhead.position.z < carriage_changer.safe_z %}
        SAVE_GCODE_STATE NAME=MOVE_TO_SAFE_Z
        G90
        G0 Z{carriage_changer.safe_z}
        RESTORE_GCODE_STATE NAME=MOVE_TO_SAFE_Z
    {% endif %}


[gcode_macro MOVE_TO_EXACTLY_SAFE_Z]
gcode:
    {% set carriage_changer = printer.printer.lookup_object('carriage_changer') %}
    SAVE_GCODE_STATE NAME=MOVE_TO_EXACTLY_SAFE_STATE
    G90
    G0 Z{carriage_changer.safe_z}
    RESTORE_GCODE_STATE NAME=MOVE_TO_EXACTLY_SAFE_STATE


[gcode_macro Set_Carriage_Changer_Acceleration]
gcode:
    {% set carriage_changer = printer.printer.lookup_object('carriage_changer') %}
    M204 S{carriage_changer.acceleration}


[gcode_macro USE_MAX_ACCELERATION]
gcode:
    {% set max_accel = printer.configfile.settings.printer.max_accel %}
    RESPOND MSG='Setting maximum acceleration back to {max_accel}'
    M204 S{max_accel}

